# -*- mode: ruby -*-
# vi: set ft=ruby :

# DNS Server VM Configuration
Vagrant.configure("2") do |config|
  # DNS Server box - use official Ubuntu Jammy box for simplicity and consistency
  config.vm.box = "bento/ubuntu-22.04"
  
  # SSH Configuration for automatic authentication
  config.ssh.username = "vagrant"
  config.ssh.insert_key = true
  
  # Set up Internal Network for isolated VM-to-VM communication (VirtualBox specific)
  # Assign a static IP address for this VM on the internal network
  config.vm.network "private_network", ip: "192.168.10.1", virtualbox__intnet: "labnet"
  
  # VirtualBox provider configuration
  config.vm.provider "virtualbox" do |vb|
    # Run headless (no GUI) for automated setup
    vb.gui = false
    
    # Customize the amount of memory on the VM:
    vb.memory = "4096"
    vb.cpus = 2
    
    # Set VM name to avoid conflicts with orphaned VMs
    vb.name = "open-net-dns-server"
  end

  # Provision DNS VM using Ansible from the host (runs the dnsmasq playbook)
  # Requires Ansible installed on the host running Vagrant.
  config.vm.provision "ansible" do |ansible|
    ansible.playbook = "./DNS-playbook.yml"
    # Use Vagrant-generated inventory so the correct SSH port/key are used.
    # We expose a group named 'dns' that points to this VM.
    ansible.groups = { 'dns' => ['default'] }
    # Do NOT set ansible.inventory_path here â€” let Vagrant create the proper inventory
  end
end 
